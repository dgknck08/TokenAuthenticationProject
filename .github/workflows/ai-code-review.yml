name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    name: AI-Powered Code Review
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: CodeRabbit AI Review
      uses: coderabbitai/openai-pr-reviewer@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      with:
        debug: false
        review_simple_changes: false
        review_comment_lgtm: false
        openai_light_model: gpt-3.5-turbo
        openai_heavy_model: gpt-4
        openai_model_temperature: 0.2
        language: Turkish
        path_filters: |
          !target/**
          !*.md
          !*.yml
          !*.yaml
        system_message: |
          Sen deneyimli bir Java Spring Boot geliÅŸtiricisisin. 
          E-commerce projesinde kod incelemelerinde ÅŸu konulara odaklan:
          - Spring Security best practices
          - JWT token gÃ¼venliÄŸi
          - Database gÃ¼venliÄŸi ve SQL injection
          - Redis cache kullanÄ±mÄ±
          - REST API security
          - Exception handling
          - Code quality ve clean code principles
          - Performance optimizasyonlarÄ± (Ã¶zellikle e-commerce iÃ§in)
          - Unit test kalitesi
          TÃ¼rkÃ§e olarak detaylÄ± ve yapÄ±cÄ± geri bildirim ver.

  sonarcloud-analysis:
    runs-on: ubuntu-latest
    name: SonarCloud Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./mvnw clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=dgknck08_TokenAuthenticationProject

    - name: SonarCloud Quality Gate check
      id: sonarcloud-quality-gate-check
      uses: sonarcloud-github-c-cpp@v1
      with:
        token: ${{ secrets.SONAR_TOKEN }}

  codacy-analysis:
    runs-on: ubuntu-latest
    name: Codacy Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Codacy Analysis CLI
      uses: codacy/codacy-analysis-cli-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        verbose: true
        format: sarif
        output: results.sarif
        
    - name: Upload SARIF results file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif

  checkmarx-scan:
    runs-on: ubuntu-latest
    name: Checkmarx Security Scan
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Checkmarx CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.4
      with:
        project: TokenAuthenticationProject
        team: /CxServer/SP/Deneme
        checkmarx_url: ${{ secrets.CHECKMARX_URL }}
        checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}
        checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}
        checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}
        scanners: sast
        params: --severity=High --severity=Medium
        
  dependency-review:
    runs-on: ubuntu-latest
    name: Dependency Review
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause, ISC
        
  code-quality-metrics:
    runs-on: ubuntu-latest
    name: Code Quality Metrics
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run SpotBugs
      run: ./mvnw compile com.github.spotbugs:spotbugs-maven-plugin:check

    - name: Run PMD
      run: ./mvnw pmd:check

    - name: Run Checkstyle
      run: ./mvnw checkstyle:check

    - name: Upload SpotBugs report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: spotbugs-report
        path: target/spotbugsXml.xml

    - name: Upload PMD report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pmd-report
        path: target/pmd.xml

  pr-comment-summary:
    runs-on: ubuntu-latest
    needs: [ai-code-review, sonarcloud-analysis, code-quality-metrics]
    if: always()
    name: PR Summary Comment
    
    steps:
    - name: Create PR Summary Comment
      uses: actions/github-script@v6
      with:
        script: |
          const summary = `
          ## ðŸ¤– AI Code Review Ã–zeti

          ### âœ… Tamamlanan Kontroller
          - AI destekli kod incelemesi
          - SonarCloud kalite analizi  
          - GÃ¼venlik taramasÄ±
          - Dependency kontrolÃ¼
          - Code quality metrikleri

          ### ðŸ“Š SonuÃ§lar
          - **AI Review**: ${{ needs.ai-code-review.result }}
          - **SonarCloud**: ${{ needs.sonarcloud-analysis.result }}
          - **Code Quality**: ${{ needs.code-quality-metrics.result }}

          ### ðŸ”— Raporlar
          - [SonarCloud Dashboard](https://sonarcloud.io/project/overview?id=dgknck08_TokenAuthenticationProject)
          - [Security Reports](https://github.com/${{ github.repository }}/security)
          
          DetaylÄ± bulgular iÃ§in yukarÄ±daki linkleri kontrol edin.
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });