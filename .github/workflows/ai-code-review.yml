name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'pom.xml'
      - '!**.md'

jobs:
  ai-code-review:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    name: AI-Powered Code Review
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: CodeRabbit AI Review
      uses: coderabbitai/openai-pr-reviewer@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      with:
        debug: false
        review_simple_changes: false
        review_comment_lgtm: false
        openai_light_model: gpt-3.5-turbo
        openai_heavy_model: gpt-4
        openai_model_temperature: 0.2
        language: Turkish
        path_filters: |
          !target/**
          !*.md
          !*.yml
          !*.yaml
          !.gitignore
        system_message: |
          Sen deneyimli bir Java Spring Boot geliştiricisisin. 
          E-commerce projesinde kod incelemelerinde şu konulara odaklan:
          - Spring Security best practices
          - JWT token güvenliği
          - Database güvenliği ve SQL injection
          - Redis cache kullanımı
          - REST API security
          - Exception handling
          - Code quality ve clean code principles
          - Performance optimizasyonları (özellikle e-commerce için)
          - Unit test kalitesi
          Türkçe olarak detaylı ve yapıcı geri bildirim ver.

  sonarcloud-pr-analysis:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    name: SonarCloud PR Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn clean verify sonar:sonar \
          -Dsonar.projectKey=dgknck08_TokenAuthenticationProject \
          -Dsonar.pullrequest.key=${{ github.event.number }} \
          -Dsonar.pullrequest.branch=${{ github.head_ref }} \
          -Dsonar.pullrequest.base=${{ github.base_ref }}